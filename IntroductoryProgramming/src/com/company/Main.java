package com.company;public class Main {    public static void main(String[] args) {	// write your code here        printTask1();        printLine();        printTask2(10);        printLine();        printTask3(3);        printLine();        printTask4(5);        printLine();        printTaskIsoscelesTriangle(5);        printLine();        printTaskDiamond(5);        printLine();        printTaskDiamondName(5);        printLine();        printFizzBuzz(16);    }    // 打印分隔符    private  static void printLine() {        System.out.println("---------------------------------------");    }    public static void printTask1() {        System.out.println('*');    }    public static void printTask2(Integer n) {        while (n-- > 0) {            System.out.print('*');        }        System.out.print('\n');    }    public static void printTask3(Integer n) {        while (n-- > 0) {            System.out.println('*');        }    }    public static String printCenterStar(Integer n, Integer row) {        int rowWidth = 2 * n -1;        int blankWidth = (rowWidth - (row * 2 - 1)) / 2;        String blank = new String("");        while (blankWidth-- > 0) {            blank += " ";        }        return blank;    }    public static void printTask4(Integer n) {        int i = 1;        while (i <= n) {            printTask2(i);            i++;        }    }    public static void printStarAscening(Integer n) {        int height = n;        int i = 1;        while (i <= n) {           System.out.print(printCenterStar(height, i));           printTask2(2 * i - 1);           i++;        }    }    public static void printStarDescending(Integer n) {        int height = n;        while (--n > 0) {            System.out.print(printCenterStar(height, n));            printTask2(2 * n -1);        }    }    public static void printTaskIsoscelesTriangle(Integer n) {        printStarAscening(n);    }    public static void printTaskDiamond(Integer n) {        printStarAscening(n);        printStarDescending(n);    }    public static void printTaskDiamondName(Integer n) {        // need to optimize        int height = n;        int i = 1;        while (i <= (n - 1)) {            System.out.print(printCenterStar(height, i));            printTask2(2 * i - 1);            i++;        }        System.out.println("lanyixing");        printStarDescending(n);    }    public static void printFizzBuzz(Integer n) {        for (int i = 1; i <= n; i++) {                if (i % 3 == 0 && i % 5 == 0) {                    System.out.println("FizzBuzz");                } else if (i % 3 == 0) {                    System.out.println("Buzz");                } else if (i % 5 == 0) {                    System.out.println("Fizz");                } else {                    System.out.println("*");                }        }    }    public static void generate(Integer n) {            }}